let defaultFieldResolver,ApolloError,SchemaDirectiveVisitor;_27d‍.x([["IsAuthDirective",()=>IsAuthDirective]]);_27d‍.w("graphql",[["defaultFieldResolver",["defaultFieldResolver"],function(v){defaultFieldResolver=v}]]);_27d‍.w("apollo-server-express",[["ApolloError",["ApolloError"],function(v){ApolloError=v}]]);_27d‍.w("@graphql-tools/utils",[["SchemaDirectiveVisitor",["SchemaDirectiveVisitor"],function(v){SchemaDirectiveVisitor=v}]]);



       class IsAuthDirective extends SchemaDirectiveVisitor {
  visitFieldDefinition(field) {
    const { resolve = defaultFieldResolver } = field;

    field.resolve = async function (...args) {
      let [_, {}, { user, isAuth }] = args;
      if (isAuth) {
        const result = await resolve.apply(this, args);
        return result;
      } else {
        throw new ApolloError(
          "You must be the authenticated user to get this information"
        );
      }
    };
  }
}
